{"version":3,"sources":["components/Header.js","components/KegControl/KegDetails.js","components/KegControl/Keg.js","components/KegControl/KegList.js","components/KegControl/ReusableForm.js","components/KegControl/NewKegForm.js","components/KegControl/EditKegForm.js","actions/index.js","components/KegControl/KegControl.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/form-visible-reducer.js","actions/ActionTypes.js","reducers/keg-list-reducer.js","reducers/selected-keg-reducer.js","reducers/editing-reducer.js","components/InitialState.js","index.js"],"names":["useStyles","makeStyles","theme","root","textAlign","color","Header","classes","className","maxWidth","marginLeft","marginRight","marginBottom","marginTop","borderRadius","width","height","backgroundColor","boxShadow","KegDetails","props","keg","onClickingDelete","onClickingOrder","iconButtonStyle","margin","orderButton","IconButton","style","onClick","id","pintsRemaing","Typography","variant","component","price","remainingPints","disabled","Fragment","Card","CardHeader","title","name","subheader","brand","CardContent","alcoholContent","kegList","onClickingEdit","aria-label","connect","state","masterKegList","Keg","cardContent","CardActionArea","whenKegClicked","flexGrow","KegList","Grid","container","spacing","Object","values","map","key","item","onKegSelection","description","padding","display","flexWrap","textField","ReusableForm","buttonText","onSubmit","formSubmissionHandler","TextField","type","label","fullWidth","Button","NewKegForm","event","preventDefault","onNewKegCreation","target","value","v4","EditKegForm","onEditKeg","deleteKeg","addKeg","buyPint","selectedKeg","console","log","KegControl","handleClick","dispatch","handleAddingNewKegToList","newKeg","a","handleQuickOrder","handleChangingSelectedKeg","handleBackToSelectedKeg","handleGoToKegList","handleOrderingPint","action2","handleEditClick","handleEditingKegInList","kegToEdit","handleDeletingKeg","currentlyVisibleState","buttonIcon","buttonAction","this","editing","formVisibleOnPage","React","Component","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","assign","newState","newRemainingPints","newKegState","id1","id2","id3","id4","id5","id6","store","createStore","InitialState","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e65d0dbe.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    color: 'rgb(45,45,45,0.6)'\n  },\n}));\n\nfunction Header(){\n  const classes = useStyles();\n\n  return (\n      <h1 className={classes.root}>neumorphic tap toom</h1>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport Clear from '@material-ui/icons/Clear';\nimport Create from '@material-ui/icons/Create';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom:100,\n    marginTop:50,\n    borderRadius:4,\n    width: 300,\n    height: \"auto\",\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n  }\n}));\n\nfunction KegDetails(props) {\n  const { keg, onClickingDelete, onClickingOrder } = props;\n  const classes = useStyles();\n  const iconButtonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"#e53935\"\n  }\n  const iconButtonStyleDisabled = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"rgb(163,177,198,0.6)\"\n  }\n  let orderButton = <IconButton \n    style={iconButtonStyle} \n    onClick={()=> onClickingOrder(keg.id)}>\n      <AttachMoney />\n    </IconButton>;\n  let pintsRemaing = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      ${keg.price}.00 PER PINT\n    </Typography>\n  if (keg.remainingPints === 0) {\n    orderButton = <IconButton \n      style={iconButtonStyleDisabled} \n      disabled\n      onClick={()=> onClickingOrder(keg.id)}>\n        <AttachMoney />\n      </IconButton>;\n    pintsRemaing = <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n    SOLD OUT\n  </Typography>;\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader\n          title={keg.name}\n          subheader={keg.brand}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {keg.alcoholContent} ALCOHOL CONTENT\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {props.kegList[keg.id].remainingPints} REMAINING PINTS\n          </Typography>\n          {pintsRemaing}\n        </CardContent>\n          {orderButton}\n          <IconButton style={iconButtonStyle} onClick={ props.onClickingEdit } aria-label=\"share\">\n            <Create />\n          </IconButton>\n          <IconButton style={iconButtonStyle} onClick={()=> onClickingDelete(keg.id) }aria-label=\"share\">\n            <Clear />\n          </IconButton>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\nKegDetails.propTypes = {\n  keg: PropTypes.object,\n  onClickingOrder: PropTypes.func,\n  onClickingEdit: PropTypes.func,\n  onClickingDelete: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    kegList: state.masterKegList\n  }\n}\n\nKegDetails = connect(mapStateToProps)(KegDetails);\n\nexport default KegDetails;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport AttachMoney from '@material-ui/icons/AttachMoney';\nimport List from '@material-ui/icons/List';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: 'rgb(45,45,45,0.6)',\n    maxWidth: 345,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop:50,\n    borderRadius:4,\n    width:150,\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n  }\n}));\n\nfunction Keg(props) {\n  const classes = useStyles();\n  const iconButtonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"#e53935\"\n  }\n  const iconButtonStyleDisabled = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 6,\n    color: \"rgb(163,177,198,0.6)\"\n  }\n  let orderButton = <IconButton \n    style={iconButtonStyle} \n    onClick={()=> props.onClickingOrder(props.id, props.remainingPints)}>\n      <AttachMoney />\n    </IconButton>;\n  let cardContent = <CardContent>{props.remainingPints} pints left</CardContent>;\n  if (props.remainingPints === 0) {\n    orderButton = <IconButton \n      style={iconButtonStyleDisabled} \n      disabled\n      onClick={()=> props.onClickingOrder(props.id, props.remainingPints)}>\n        <AttachMoney />\n      </IconButton>;\n    cardContent = <CardContent>SOLD OUT!</CardContent>;\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader\n          title={props.name}\n        />\n        {cardContent}\n        <CardActionArea>\n          {orderButton}\n          <IconButton style={iconButtonStyle} onClick={() => props.whenKegClicked(props.id)} >\n            <List />\n          </IconButton>\n        </CardActionArea>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\nKeg.propTypes = {\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  alcoholContent: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  remainingPints: PropTypes.number,\n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func,\n  onClickingOrder: PropTypes.func\n};\n\nexport default Keg;","import React from \"react\";\nimport Keg from \"./Keg\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nfunction KegList(props){\n  const classes = useStyles();\n\n  return (\n    <React.Fragment  >\n      <Grid className={classes.root} container spacing={2}>\n        {Object.values(props.kegList).map((keg) => {\n          return <Grid key={keg.id} item item xs={6} sm={4} md={3} lg={2}>\n            <Keg \n              whenKegClicked = { props.onKegSelection }\n              onClickingOrder = { props.onClickingOrder }\n              name={keg.name}\n              brand={keg.brand}\n              description={keg.description}\n              alcoholContent={keg.alcoholContent}\n              price={keg.price}\n              remainingPints={keg.remainingPints}\n              id={keg.id}/>\n          </Grid>\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nKegList.propTypes = {\n  keglist: PropTypes.object,\n  onKegSelection: PropTypes.func,\n  onClickingOrder: PropTypes.func\n};\n\nexport default KegList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: 600,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop:50,\n    marginBottom:100,\n    borderRadius:4,\n      /* Basic styling and alignment */\n    /* For Neumorphism Effect */\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n      /* For Neumorphism Effect */\n  },\n  textField: {\n    width: \"auto\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n\n  },\n}));\n\n\nfunction ReusableForm(props) {\n  const classes = useStyles();\n  const buttonStyle = {\n    backgroundColor: \"#E0E5EC\",\n    boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\",\n    margin: 20\n  }\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardHeader title={props.buttonText}>\n        </CardHeader>\n        <form onSubmit= {props.formSubmissionHandler}>\n          <TextField\n            type='text'\n            name='name'\n            label='Beer Name'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            type='text'\n            name='brand'\n            label='Brand'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            type='text'\n            name='description'\n            label='Description'\n            id=\"standard-full-width\"\n            style={{ margin: 8 }}\n            fullWidth\n          />\n          <TextField\n            id='margin-none' \n            className={classes.textField}\n            type='text'\n            name='alcoholContent'\n            label='Alcohol Content'/>\n          <TextField\n            id='margin-none' \n            className={classes.textField}\n            type='number'\n            name='price'\n            label='Price'/>\n          <br />\n          <Button \n            style={buttonStyle}\n            type=\"submit\">{props.buttonText}\n          </Button>\n        </form>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport { v4 } from 'uuid';\nimport PropTypes from \"prop-types\";\nimport ReusableForm from './ReusableForm';\n\n\nfunction NewKegForm(props) {\n\n  function handleNewKegFormSubmission(event) {\n    event.preventDefault();\n    props.onNewKegCreation({name: event.target.name.value, brand: event.target.brand.value, alcoholContent: event.target.alcoholContent.value, price: event.target.price.value, remainingPints: 124, id: v4()});\n  }\n\n  return(\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewKegFormSubmission}\n        buttonText=\"Add Keg\" />\n    </React.Fragment>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n};\n\nexport default NewKegForm;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from 'prop-types';\n\nfunction EditKegForm (props) {\n\n  function handleEditKegFormSubmission(event) {\n    event.preventDefault();\n    props.onEditKeg({\n      name: event.target.name.value, \n      brand: event.target.brand.value,\n      description: event.target.description.value, \n      alcoholContent: event.target.alcoholContent.value, \n      price: event.target.price.value, \n      remainingPints: props.keg.remainingPints,\n      id: props.keg.id\n    });\n  }\n  return (\n    <React.Fragment>\n      <ReusableForm \n        formSubmissionHandler={handleEditKegFormSubmission}\n        buttonText=\"Update Keg\" />\n    </React.Fragment>\n  );\n}\n\nEditKegForm.propTypes = {\n  onEditKeg: PropTypes.func\n};\n\nexport default EditKegForm;","\nexport const deleteKeg = id => ({\n  type: 'DELETE_KEG',\n  id\n});\n\nexport const toggleForm = () => ({\n  type: 'TOGGLE_FORM'\n});\n\nexport const editing = () => {\n  return {\n    type: 'EDITING'\n  }\n}\n\nexport const addKeg = (keg) => {\n  const { name, brand, description, alcoholContent, price, remainingPints, id } = keg;\n  return {\n    type: 'ADD_KEG',\n    name: name,\n    brand: brand,\n    description: description,\n    alcoholContent: alcoholContent,\n    price: price,\n    remainingPints: remainingPints,\n    id: id\n  }\n}\n\nexport const buyPint = (keg) => {\n  const { name, brand, description, alcoholContent, price, remainingPints, id } = keg;\n  return {\n    type: 'BUY_PINT',\n    name: name,\n    brand: brand,\n    description: description,\n    alcoholContent: alcoholContent,\n    price: price,\n    remainingPints: remainingPints,\n    id: id\n  }\n}\n\nexport const selectedKeg = (keg) => {\n  console.log(\"action selectedKeg: \", keg);\n  if (!keg) {\n    return {\n      type: 'SELECTED_KEG_NULL'\n    }\n  } else {\n    const { name, brand, description, alcoholContent, price, remainingPints, id } = keg;\n    console.log(\"return SELECTED_KEG as action type: \", keg.type)\n    console.log(\"return SELECTED_KEG as keg: \", keg)\n    const selectedKeg = {\n      type: 'SELECTED_KEG',\n      name: name,\n      brand: brand,\n      description: description,\n      alcoholContent: alcoholContent,\n      price: price,\n      remainingPints: remainingPints,\n      id: id\n    }\n    console.log(\"ACTION SELECTEDKEG: \", selectedKeg);\n    return selectedKeg;\n  }\n}\n\n","import React from \"react\";\nimport KegDetails from \"./KegDetails\";\nimport KegList from \"./KegList\";\nimport NewKegForm from \"./NewKegForm\";\nimport EditKegForm from \"./EditKegForm\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport * as a from '../../actions';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\n\nclass KegControl extends React.Component {\n\n  // Allows user to navigate to Add New Keg Page\n  handleClick = () => {\n    const { dispatch } = this.props;\n    console.log(\"handleClick Props: \", this.props)\n    const action = a.toggleForm();\n    dispatch(action);\n  }\n\n  // Allows users to add a new Keg to the MasterKegList object\n  handleAddingNewKegToList = (newKeg) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(newKeg);\n    dispatch(action);\n    const action2 = a.toggleForm();\n    dispatch(action2);\n  }\n\n  // Allows user to handle an order from the landing page.\n  handleQuickOrder = (id) => {\n    const { dispatch, masterKegList } = this.props;\n    const selectedKeg = masterKegList[id];\n    const action = a.buyPint(selectedKeg);\n    dispatch(action);\n  }\n\n  // Allows user to view details of a selected keg\n  handleChangingSelectedKeg = (id) => {\n    const { dispatch, masterKegList } = this.props;\n    console.log(\"id: \", id)\n    const action = a.selectedKeg(masterKegList[id]);\n    dispatch (action);\n  }\n\n  // Allows user to view details of a selected keg\n  handleBackToSelectedKeg = () => {\n    const { dispatch, masterKegList } = this.props;\n    const action = a.toggleForm();\n    dispatch (action);\n    const action2 = a.editing();\n    dispatch (action2);\n  }\n\n  // Allows user to view KegList\n  handleGoToKegList = () => {\n    const { dispatch } = this.props;\n    const action = a.selectedKeg();\n    dispatch (action);\n  }\n\n\n  //*************I'm leaving this bit of commented code here because I'd love to discuss it in a meeting.  I can't figure out how to get this one to work. */\n\n  // Allows user to buy a pint from the details page.\n  handleOrderingPint = (id) => {\n    const { dispatch, masterKegList } = this.props;\n    console.log(\"handle Ordering Pint state: \", this.props);\n    const action = a.buyPint(masterKegList[id]);\n    dispatch(action);\n    const action2 = a.selectedKeg(masterKegList[id]);\n    console.log(\"updatedKeg: \", action2)\n    dispatch(action2);\n    console.log(\"masterKegList new state: \", masterKegList[id].remainingPints);\n    console.log(\"selectedKeg state: \", this.props.selectedKeg.remainingPints);\n  }\n\n  // Allows user to navigate to the Update Keg form.\n  handleEditClick = () => {\n    const { dispatch } = this.props;\n    const action = a.editing();\n    dispatch(action);\n  }\n\n  // Allows user to navigate to the Update Keg form.\n  handleEditClick = () => {\n    const { dispatch } = this.props;\n    const action = a.editing();\n    dispatch(action);\n  }\n\n  // Allows user to change the keg details in the MasterKegList object.\n  handleEditingKegInList = (kegToEdit) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(kegToEdit);\n    dispatch(action);\n    const action2 = a.editing();\n    dispatch(action2);\n    const action3 = a.selectedKeg(kegToEdit);\n    dispatch(action3); \n  }\n\n  // Allows user to remove a keg from the tap\n  handleDeletingKeg = (id) => {\n    const { dispatch } = this.props;\n    const action = a.deleteKeg(id);\n    dispatch(action);\n    const action2 = a.selectedKeg();\n    dispatch(action2);  \n  }\n\n  render() {\n    const styledButton = {\n      color: 'rgb(45,45,45,0.6)',\n      maxWidth: 345,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      borderRadius:4,\n      width:150,\n      backgroundColor: \"#E0E5EC\",\n      boxShadow: \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px    rgba(255,255,255, 0.5)\"\n    }\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    let buttonIcon = null;\n    let buttonAction = null;\n    console.log(\"store state at render: \", this.props);\n\n    // decide which view to display\n    if (this.props.editing ) {      // display editing view\n      currentlyVisibleState = <EditKegForm \n        keg = {this.props.selectedKeg} \n        onEditKeg = {this.handleEditingKegInList} />\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg Details\";\n      /////// This button action not working ///////\n      // buttonAction = this.handleChangingSelectedKeg;\n      buttonAction = this.handleBackToSelectedKeg;\n    } else if (this.props.selectedKeg != null) {    // display keg details view\n      console.log(\"render selectedKeg state: \", this.props.selectedKeg)\n      currentlyVisibleState = <KegDetails keg = {this.props.selectedKeg} \n        onClickingOrder = {this.handleOrderingPint}\n        onClickingDelete = {this.handleDeletingKeg}\n        onClickingEdit = {this.handleEditClick} />\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg List\";\n      buttonAction = this.handleGoToKegList;\n    } else if (this.props.formVisibleOnPage) {      // displayNewKegForm \n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\n      buttonIcon = <ArrowBackIos />;\n      buttonText = \"Return to Keg List\";\n      buttonAction = this.handleClick;\n    } else {        // display landing page\n      currentlyVisibleState = <KegList kegList={this.props.masterKegList}\n        onClickingOrder= {this.handleQuickOrder}\n        onKegSelection={this.handleChangingSelectedKeg} />;\n      buttonText = \"Add A Keg\";\n      buttonIcon = <Add />;\n      buttonAction = this.handleClick;\n    }\n    return (\n      <React.Fragment>\n        <Button onClick={buttonAction} style={styledButton}>\n          {buttonIcon}\n          {buttonText}\n        </Button>\n        {currentlyVisibleState}\n      </React.Fragment>\n    );\n  }\n}\n\nKegControl.propTypes = {\n  masterKegList: PropTypes.object,\n  formVisibleOnPage: PropTypes.bool,\n  editing: PropTypes.bool,\n  selectedKeg: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    formVisibleOnPage: state.formVisibleOnPage,\n    editing: state.editing,\n    selectedKeg: state.selectedKeg\n  }\n}\n\nKegControl = connect(mapStateToProps)(KegControl);\n\nexport default KegControl;","import React from 'react';\nimport '../App.css';\nimport 'rmwc/dist/styles';\nimport Header from \"./Header\";\nimport KegControl from \"./KegControl/KegControl\"\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <KegControl />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import formVisibleReducer from './form-visible-reducer';\nimport kegListReducer from './keg-list-reducer';\nimport selectedKegReducer from './selected-keg-reducer';\nimport editingReducer from './editing-reducer';\nimport { combineReducers } from 'redux';\n\n// const store = createStore(rootReducer);\n\nconst rootReducer = combineReducers({\n  formVisibleOnPage: formVisibleReducer,\n  masterKegList: kegListReducer,\n  selectedKeg: selectedKegReducer,\n  editing: editingReducer\n});\n\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n  case c.TOGGLE_FORM:\n    return !state;\n  default:\n    return state;\n  }\n};","export const ADD_KEG = 'ADD_KEG';\nexport const DELETE_KEG = 'DELETE_KEG';\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const BUY_PINT = 'BUY_PINT';\nexport const SELECTED_KEG = 'SELECTED_KEG';\nexport const SELECTED_KEG_NULL = 'SELECTED_KEG_NULL';\nexport const EDITING = 'EDITING';","import * as c from './../actions/ActionTypes';\n\nexport default (state = {}, action) => {\n  const { name, brand, description, alcoholContent, price, remainingPints, id } = action;\n  switch (action.type) {\n  case c.ADD_KEG:\n    return Object.assign({}, state, {\n      [id]: {\n        name: name,\n        brand: brand,\n        description: description,\n        alcoholContent: alcoholContent,\n        price: price,\n        remainingPints: remainingPints,\n        id: id\n      }\n    });\n  case c.DELETE_KEG:\n    const newState = { ...state };\n    delete newState[id];\n    return newState;\n  case c.BUY_PINT:\n    const newRemainingPints = remainingPints - 1;\n    console.log(\"newRemainingPints: \", newRemainingPints);\n    const newKegState = Object.assign({}, state, {\n      [id]: {\n        name: name,\n        brand: brand,\n        description: description,\n        alcoholContent: alcoholContent,\n        price: price,\n        remainingPints: newRemainingPints,\n        id: id\n      }\n    })\n    console.log(\"newKegState: \", newKegState);\n    return newKegState;\n  default:\n    return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = null, action) => {\n  console.log(\"REDUCER ACTION: \", action)\n  const { name, brand, description, alcoholContent, price, remainingPints, id } = action;\n  console.log(\"reducer remaining pints: \", remainingPints)\n  switch (action.type) {\n  case c.SELECTED_KEG:\n    const selectedKeg = {\n      name: name,\n      brand: brand,\n      description: description,\n      alcoholContent: alcoholContent,\n      price: price,\n      remainingPints: remainingPints,\n      id: id\n    }\n    console.log(\"reducer selectedKeg return: \", selectedKeg.remainingPints)\n    return selectedKeg;\n  case c.SELECTED_KEG_NULL:\n    console.log(\"returned SELECTED KEG NULL\")\n    return null;\n  default:\n    console.log(\"returned default state\")\n    return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n  case c.EDITING:\n    return !state;\n  default:\n    return state;\n  }\n};","import { v4 } from 'uuid';\n\nconst id1 = v4();\nconst id2 = v4();\nconst id3 = v4();\nconst id4 = v4();\nconst id5 = v4();\nconst id6 = v4();\n\nexport default {\n  masterKegList: {\n    [id1]: {\n      name: \"Banana Belgium Ale\",\n      brand: \"Solovewicz Brewing\",\n      description: \"Fruity, but in a canine kind of way.\",\n      alcoholContent: \"4%\",\n      price: 5,\n      remainingPints: 0,\n      key: id1,\n      id: id1\n    },\n    [id2]: {\n      name: \"Sneaky Sasquatch Stout\",\n      brand: \"Bigfoot Fermentorium\",\n      description: \"Pungent.\",\n      alcoholContent: \"8%\",\n      price: 11,\n      remainingPints: 124,\n      key: id2,\n      id: id2\n    },\n    [id3]: {\n      name: \"Calvin & Hobbes Pale Ale\",\n      brand: \"Watterson Werks\",\n      description: \"Blonde with notes of childhood.\",\n      alcoholContent: \"5%\",\n      price: 6,\n      remainingPints: 124,\n      key: id3,\n      id: id3\n    },\n    [id4]: {\n      name: \"Goat Lords Cider\",\n      brand: \"Wild Animal Werks\",\n      description: \"Maaahhhhy favorite cider.\",\n      alcoholContent: \"4%\",\n      price: 5,\n      remainingPints: 124,\n      key: id4,\n      id: id4\n    },\n    [id5]: {\n      name: \"Dinosaur Double IPA\",\n      brand: \"Limited Edition.  Try it before it goes exctinct.\",\n      description: \"RAWR.\",\n      alcoholContent: \"9%\",\n      price: 8,\n      remainingPints: 124,\n      key: id5,\n      id: id5\n    },\n    [id6]: {\n      name: \"Mary Poppins Kombucha\",\n      brand: \"Sister Suffragettes, inc.\",\n      description: \"Nearly perfect in every way.\",\n      alcoholContent: \"3%\",\n      price: 7,\n      remainingPints: 124,\n      key: id6,\n      id: id6\n    }\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport InitialState from './components/InitialState';\n\nconst store = createStore(\n  rootReducer,\n  InitialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nstore.subscribe(() =>\n  console.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}